generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model candidatures {
  id                Int       @id @default(autoincrement())
  mission_id        Int?
  user_id           Int?
  lettre_motivation String?
  status            String?   @default("en_attente") @db.VarChar(20)
  created_at        DateTime? @default(now()) @db.Timestamp(6)
  missions          missions? @relation(fields: [mission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users             users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model freelance_cvs {
  id            Int       @id @default(autoincrement())
  user_id       Int?
  bio           String?
  skills        String[]
  portfolio_url String?
  cv_url        String?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model missions {
  id           Int            @id @default(autoincrement())
  user_id      Int?
  title        String         @db.VarChar(255)
  description  String?
  price        Decimal?       @db.Decimal(10, 2)
  status       String?        @default("ouverte") @db.VarChar(20)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  candidatures candidatures[]
  users        users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id            Int             @id @default(autoincrement())
  email         String          @unique @db.VarChar(255)
  password      String          @db.VarChar(255)
  name          String          @db.VarChar(255)
  role          String          @db.VarChar(20)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  candidatures  candidatures[]
  freelance_cvs freelance_cvs[]
  missions      missions[]
}
