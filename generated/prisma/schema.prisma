generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model candidatures {
  id                String    @id @default(uuid()) @db.Uuid
  mission_id        String?   @db.Uuid
  user_id           String?   @db.Uuid
  lettre_motivation String?
  status            String?   @default("en_attente") @db.VarChar(20)
  created_at        DateTime? @default(now()) @db.Timestamp(6)
  missions          missions? @relation(fields: [mission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users             users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model freelance_cvs {
  id            String    @id @default(uuid()) @db.Uuid
  user_id       String?   @db.Uuid
  bio           String?
  skills        String[]
  portfolio_url String?
  cv_url        String?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model missions {
  id           String         @id @default(uuid()) @db.Uuid
  user_id      String?        @db.Uuid
  title        String         @db.VarChar(255)
  description  String?
  price        Decimal?       @db.Decimal(10, 2)
  status       String?        @default("ouverte") @db.VarChar(20)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  candidatures candidatures[]
  users        users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id            String          @id @default(uuid()) @db.Uuid
  email         String          @unique @db.VarChar(255)
  password      String          @db.VarChar(255)
  name          String          @db.VarChar(255)
  role          String          @db.VarChar(20)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  candidatures  candidatures[]
  freelance_cvs freelance_cvs[]
  missions      missions[]
}
