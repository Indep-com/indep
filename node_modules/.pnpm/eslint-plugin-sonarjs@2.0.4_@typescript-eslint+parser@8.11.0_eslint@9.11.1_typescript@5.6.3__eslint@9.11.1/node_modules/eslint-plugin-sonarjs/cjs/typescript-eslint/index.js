"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tsEslintRules = void 0;
const eslint_plugin_1 = __importDefault(require("@typescript-eslint/eslint-plugin"));
const { rules } = eslint_plugin_1.default;
const sanitize_js_1 = require("./sanitize.js");
/**
 * TypeScript ESLint rules that rely on type information fail at runtime because
 * they unconditionally assume that TypeScript's type checker is available.
 */
const sanitized = {};
for (const ruleKey of Object.keys(rules)) {
    sanitized[ruleKey] = (0, sanitize_js_1.sanitize)(rules[ruleKey]);
}
/**
 * TypeScript ESLint rules.
 */
exports.tsEslintRules = sanitized;
